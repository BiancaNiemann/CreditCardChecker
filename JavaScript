// All valid credit card numbers
const valid1 = [4, 5, 3, 9, 6, 7, 7, 9, 0, 8, 0, 1, 6, 8, 0, 8];
const valid2 = [5, 5, 3, 5, 7, 6, 6, 7, 6, 8, 7, 5, 1, 4, 3, 9];
const valid3 = [3, 7, 1, 6, 1, 2, 0, 1, 9, 9, 8, 5, 2, 3, 6];
const valid4 = [6, 0, 1, 1, 1, 4, 4, 3, 4, 0, 6, 8, 2, 9, 0, 5];
const valid5 = [4, 5, 3, 9, 4, 0, 4, 9, 6, 7, 8, 6, 9, 6, 6, 6];

// All invalid credit card numbers
const invalid1 = [4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5];
const invalid2 = [5, 7, 9, 5, 5, 9, 3, 3, 9, 2, 1, 3, 4, 6, 4, 3];
const invalid3 = [3, 7, 5, 7, 9, 6, 0, 8, 4, 4, 5, 9, 9, 1, 4];
const invalid4 = [6, 0, 1, 1, 1, 2, 7, 9, 6, 1, 7, 7, 7, 9, 3, 5];
const invalid5 = [5, 3, 8, 2, 0, 1, 9, 7, 7, 2, 8, 8, 3, 8, 5, 4];

// Can be either valid or invalid
const mystery1 = [3, 4, 4, 8, 0, 1, 9, 6, 8, 3, 0, 5, 4, 1, 4];
const mystery2 = [5, 4, 6, 6, 1, 0, 0, 8, 6, 1, 6, 2, 0, 2, 3, 9];
const mystery3 = [6, 0, 1, 1, 3, 7, 7, 0, 2, 0, 9, 6, 2, 6, 5, 6, 2, 0, 3];
const mystery4 = [4, 9, 2, 9, 8, 7, 7, 1, 6, 9, 2, 1, 7, 0, 9, 3];
const mystery5 = [4, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3];

// An array of all the arrays above
const batch = [valid1, valid2, valid3, valid4, valid5, invalid1, invalid2, invalid3, invalid4, invalid5, mystery1, mystery2, mystery3, mystery4, mystery5];


// CHECK IF CARD NUMBER VALID OR INVALID
const validateCred = arr => {
    let newArr = arr.reverse() // will put orig array in reverse
    let evenArr = newArr.filter((a,b)=>b%2===1); // all even length elements
    let oddArr = newArr.filter((a,b)=>b%2!=1); // all odd length elements
 
    let evenArrDbl = evenArr.map(dbl => {   //goes through evenArr and doubles each element
    return dbl * 2;
    });
    
    let minusNine = evenArrDbl.map(deduct => { //checks if element >= to 9 and deducts 9 if true
    if (deduct >= 9) {
      return deduct - 9;
    } else {
      return deduct;
    }
    });
    
    let sumEven = minusNine.reduce((total, evenNum) => //adds up even array
      total + evenNum, 0); 
    
    let sumOdd = oddArr.reduce((total, oddNum) =>  //adds upp odd length elements 
      total + oddNum, 0)
    //console.log(sumOdd)

    let sum = sumOdd + sumEven //totals the even and odd amounts
    //console.log(sum)

    if (sum % 10 == 0) { //checks if mod 10 = 0
      return 'valid';
      } else {
      return 'invalid';
      }
  };    
 
// ARRAY OF ALL INVALID CARD NUMBERS
const findInvalidCards = invCardNum => {
  let invalidArr= [];
  for (let i of invCardNum) {
    if (validateCred(i) === 'invalid') {
    invalidArr.push(i.reverse());
    }
  }
  return invalidArr
};
 
// SHOW WHICH CREDIT CARD
 const idInvalidCardCompanies = bankCheck => {
   let invalidCards = findInvalidCards(bankCheck); 
   let duplicates = []
      
   for (let i of invalidCards) {
     if (i[0] === 3) {
       duplicates.push('Amex (American Express)')
     } else if (i[0] === 4){
       duplicates.push('Visa')
     } else if (i[0] === 5){
       duplicates.push('Mastercard')
    } else if (i[0] === 6){
       duplicates.push('Discover')
   } else {
      duplicates.push('Company not found')
   }
  } 

    let invalidCardCompanies = duplicates.filter((element, index) => {
      return duplicates.indexOf(element) === index;
    });
    console.log (invalidCardCompanies)
};

idInvalidCardCompanies(batch)


